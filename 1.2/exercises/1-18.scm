(define (mult-iter-fast a b)
  (define (double x)
    (+ x x))
  (define (halve x)
    (/ x 2))
  (define (even? x)
    (= 0 (remainder x 2)))
  (define (iter a counter product)
    (cond ((= counter 0) product)
	  ((even? counter) (iter (double a) (halve counter) product))
	  (else (iter a (- counter 1) (+ a product)))))
  (iter a b 0))

(mult-iter-fast 13 8) ;;; = (* 13 8)
(mult-iter-fast 3 4)  ;;; = (* 3 4)